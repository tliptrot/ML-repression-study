infs_face2face_tel = (Q421 %in% c(1,2)),
infs_newspaper = (Q421 == 3),
infs_radio = (Q421==4),
infs_television = (Q421==5),
infs_socmed = (Q421==6),
country_of_origin_jordan = Q1020JO==1,
y_dem_top_issue = Q2061A==3,
y_dem_pref = Q516A==3,
y_2_dem_pref_not_in_dem = (Q516A==3 & Q511<6 & Q511 != 99 ),
y_1_distrust_gov = Q201A_1 %in% c(3,4),
y_distrust_army = Q201B_6 %in% c(3,4),
y_distrust_pres_prime = Q201B_31 %in% c(3,4),
y_trust_ikhwan = Q201B_12 %in% c(1,2),
.keep = "none")
df <- read_sav("ABV_Release_Data.sav")
setwd("~/GitHub/ML-repression-study")
df <- read_sav("ABV_Release_Data.sav")
setwd("~/GitHub/ML-repression-study/arabbaro")
df <- read_sav("ABV_Release_Data.sav")
#clears list
rm(list = ls())
library(tidyverse)
#what if I first used a sav file, then I transform all the income ones to their value, with NAs as 0. Then I could just change transmog a little bit.
library(sjlabelled)
library(gsub)
help("as_factor")
df <- read_sav("ABV_Release_Data.sav")
inc_names <- variable.names(df)[grepl("^Q1015C|^Q1015B",variable.names(df))]
df_sav <- df %>%
mutate(across(inc_names, ~ as.numeric(gsub("[^0-9.]","",gsub(".*-","",gsub('\\.','',gsub('>','',gsub('<','',sjlabelled::as_character(.x))))))))) %>%
select(inc_names) %>%
mutate(income=rowSums(.,na.rm=TRUE))
df$income <- df_sav$income
# Creates capitals list
capitals <- c(80005,130004,10016,210001,50001,100005,90001,220007,190007,150013,70001)
#dfjo_trans is just like dfjo but with all other variables dropped
dfjo_trans <- df %>%
dplyr:::filter_rows(Q1001C < 5, Q1003 <10, Q409 < 10,Q266<10) %>%
dplyr:::filter_rows(country == 8) %>%
mutate(income = income,
#         remit = Q1017,
#         hijab = Q1010C,
in_capital = Q1001A %in% capitals,
married = Q1010==4,
employed = Q1005==1,
employed_pub_sec = Q1005==1&Q1006A==1,
employed_priv_sec = Q1005==1&Q1006A==2,
selfemp = Q1005==2,
retired = Q1005==3,
housewife = Q1005==4,
student = Q1005==5,
unemp = Q1005==6,
neighb_rich = Q1001C==1,
neighb_poor = Q1001C==2,
neighb_mixed = Q1001C==3,
educ = ifelse(Q1003<8,(7-Q1003)/6,0),
male = Q1002==1,
age = Q1001,
orgmem = (Q501==1|Q501A==1),
#         charity = Q266,
#         petit = Q502_1,
#         protest = Q502_2,
#         polviol = Q502_4,
#         campaign_attend = Q302,
#         parlvote_nas_not_asked_1_is_yes = Q301A,
locvote= Q301C==1,
#returns TRUE if uses iternet
internet = Q409 < 6,
#1-5, where 1 is using internet most often
#         internet_use_ordinal_4_is_top = ifelse(Q409<6,6-Q409,0),
internet_use_bin = ifelse(Q409<6,(6-Q409)/5,0),
#1-5, where 5 is using 10 hours or more a day
#         socmed_use_ordinal = ifelse(Q424>10|is.na(Q424),0,Q424-1),
#         socmed_use_bin = socmed_use_ordinal/4,
#         socmed_use_dummy = socmed_use_bin > 0,
infs_face2face_tel = (Q421 %in% c(1,2)),
infs_newspaper = (Q421 == 3),
infs_radio = (Q421==4),
infs_television = (Q421==5),
infs_socmed = (Q421==6),
country_of_origin_jordan = Q1020JO==1,
y_dem_top_issue = Q2061A==3,
y_dem_pref = Q516A==3,
y_2_dem_pref_not_in_dem = (Q516A==3 & Q511<6 & Q511 != 99 ),
y_1_distrust_gov = Q201A_1 %in% c(3,4),
y_distrust_army = Q201B_6 %in% c(3,4),
y_distrust_pres_prime = Q201B_31 %in% c(3,4),
y_trust_ikhwan = Q201B_12 %in% c(1,2),
.keep = "none")
write.csv(dfjo_trans, 'arabbaro_jo_labeled_reduced.csv')
df %>% group_by(country)
df %>% group_by(country) %>%
count(Q502_2)
view(df %>% group_by(country) %>%
count(Q502_2))
(224+121)/(224+121+2005+12+26)
regime_pref_cross_val <- grid.arrange(labs, eg_y2, jo_y2, al_y2, mo_y2, ncol=5)
library(tidyverse)
library(gridExtra)
library(readr)
setwd("~/GitHub/ML-repression-study/variable importance csv")
algeria_y2 <- read_csv("algeria_y2")
egypt_y1 <- read_csv("egypt_y1")
egypt_y2 <- read_csv("egypt_y2")
jordan_y1 <- read_csv("jordan_y1")
jordan_y2 <- read_csv("jordan_y2")
kuwait_y1 <- read_csv("kuwait_y1")
morocco_y1 <- read_csv("morocco_y1")
morocco_y2 <- read_csv("morocco_y2")
y2 <- full_join(egypt_y2, jordan_y2,by="variable", suffix=c("_eg","_jo"))
y2 <- full_join(y2, morocco_y2,by="variable", suffix=c("_mo","_mo"))
y2 <- full_join(y2, algeria_y2,by="variable", suffix=c("","_al"))
y2 <- y2 %>% mutate(vi_avg= (ifelse(is.na(vi_eg),0,vi_eg) + ifelse(is.na(vi_jo),0,vi_jo) + ifelse(is.na(vi),0,vi) + ifelse(is.na(vi_al),0,vi_al))/4)
help(mutate)
labs <- y2 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable,y=vi_avg)) +
coord_flip() +
labs(title = "Democracy Preference") +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank())
#  theme(axis.text.y = element_text(angle = 35, hjust = 1))
eg_y2 <- y2 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi_eg)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low_eg,ymax=high_eg)) +
labs(title = "Egypt") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
jo_y2 <- y2 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi_jo)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low_jo,ymax=high_jo)) +
labs(title = "Jordan") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
mo_y2 <- y2 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low,ymax=high)) +
labs(title = "Morocco") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
al_y2 <- y2 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi_al)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low_al,ymax=high_al)) +
labs(title = "Algeria") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
regime_pref_cross_val <- grid.arrange(labs, eg_y2, jo_y2, al_y2, mo_y2, ncol=5)
y1 <- full_join(egypt_y1, jordan_y1,by="variable", suffix=c("_eg","_jo"))
y1 <- full_join(y1, morocco_y1,by="variable", suffix=c("_mo","_mo"))
y1 <- full_join(y1, kuwait_y1,by="variable", suffix=c("","_ku"))
y1 <- y1 %>% mutate(vi_avg= (ifelse(is.na(vi_eg),0,vi_eg) + ifelse(is.na(vi_jo),0,vi_jo) + ifelse(is.na(vi),0,vi) + ifelse(is.na(vi_ku),0,vi_ku))/4)
help(mutate)
labs1 <- y1 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable,y=vi_avg)) +
coord_flip() +
labs(title = "Trust in Gov") +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank())
#  theme(axis.text.y = element_text(angle = 35, hjust = 1))
eg_y1 <- y1 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi_eg)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low_eg,ymax=high_eg)) +
labs(title = "Egypt") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
jo_y1 <- y1 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi_jo)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low_jo,ymax=high_jo)) +
labs(title = "Jordan") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
mo_y1 <- y1 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low,ymax=high)) +
labs(title = "Morocco") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
ku_y1 <- y1 %>%
arrange(vi_avg) %>%
mutate(variable=factor(variable, levels=variable)) %>%
ggplot(aes(x=variable, y=vi_ku)) +
geom_point(stat="identity", color="black",position=position_dodge()) +
coord_flip() +
geom_errorbar(aes(ymin=low_ku,ymax=high_ku)) +
labs(title = "Kuwait") +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
trust_cross_val <- grid.arrange(labs1, eg_y1, jo_y1, ku_y1, mo_y1, ncol=5)
df %>% group_by(country) %>%
count(Q302)
view(df %>% group_by(country) %>%
count(Q302))
450/2400
setwd("~/GitHub/ML-repression-study/Confusion_Matrices")
setwd("~/GitHub/ML-repression-study/Confusion_Matrices")
mydir = "Confusion_Martices"
mydir = "csvfolder"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
myfiles
myfiles
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
myfiles = list.files(path="", pattern="*.csv", full.names=TRUE)
myfiles
setwd("~/GitHub/ML-repression-study")
mydir = "Confusion_Martices"
myfiles = list.files(path="", pattern="*.csv", full.names=TRUE)
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
yfiles
myfiles
library(plyr)
library(readr)
setwd("~/GitHub/ML-repression-study")
mydir = "Confusion_Martices"
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
myfiles
setwd("~/GitHub/ML-repression-study")
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
myfiles
myfiles = list.files(path=mydir, pattern="*", full.names=TRUE)
myfiles
myfiles = list.files(pattern="*", full.names=TRUE)
myfiles
setwd("~/GitHub/ML-repression-study/Confusion_Matrices")
myfiles = list.files(pattern="*.csv", full.names=TRUE)
myfiles
dat_csv = ldply(myfiles, read_csv)
dat_csv
dat_csv[1]
dat_csv[2]
dat_csv[3]
dat_csv[4]
myfiles
rownames(dat_csv)
help(ldply)
dat_csv = ldply(myfiles, read_csv, .id=myfiles)
rownames(dat_csv)
dat_csv = ldply(myfiles, read_csv, .id=myfiles)
dat_csv
for (i in 1:length(myfiles)) {
labs[i] <- myfiles[i]
}
labs <- c()
for (i in 1:length(myfiles)) {
labs[i] <- myfiles[i]
}
labs <- c()
for (i in 1:length(myfiles)) {
labs[2i-1] <- myfiles[i]
labs[2i] <- myfiles[i]
}
for (i in 1:length(myfiles)) {
labs[2i-1] <- myfiles[i],
labs[2i] <- myfiles[i]
}
labs <- c()
for (i in 1:length(myfiles)) {
labs[2i-1] <- myfiles[i]
labs[2i] <- myfiles[i]
}
for (i in 1:length(myfiles)) {
labs[(2i-1)] <- myfiles[i]
labs[(2i)] <- myfiles[i]
}
2i
2*i
for (i in 1:length(myfiles)) {
labs[(2*i-1)] <- myfiles[i]
labs[(2*i)] <- myfiles[i]
}
labs
dat_csv = ldply(myfiles, read_csv, .id=labs)
dat_csv
rownames(dat_csv)
dat_csv = ldply(myfiles, read_csv, .id=labs)
labs <- c()
for (i in 1:length(myfiles)) {
labs[(2*i-1)] <- myfiles[i]
labs[(2*i)] <- myfiles[i]
}
length(labs)
dat_csv = ldply(myfiles, read_csv, .id=labs)
dat_csv$X1 <- labs
dat_csv
# makes publishable results from confusion matrices
library(plyr)
library(readr)
setwd("~/GitHub/ML-repression-study/Confusion_Matrices")
mydir = "Confusion_Martices"
myfiles = list.files(pattern="*.csv", full.names=TRUE)
myfiles
dat_csv = ldply(myfiles, read_csv, .id=labs)
labs <- c()
for (i in 1:length(myfiles)) {
labs[(2*i-1)] <- myfiles[i]
labs[(2*i)] <- myfiles[i]
}
dat_csv$cm <- labs
dat_csv
dat_csv %>% spread("0","1")
dat_csv
dat_csv %>% mutate(actual = ifelse(X1==0),FALSE,TRUE)
dat_csv %>% mutate(actual = ifelse(X1==0,FALSE,TRUE))
dat_csv %>% mutate(actual = ifelse(X1==0,"FALSE","TRUE"))
dat_csv %>% mutate(actual = ifelse(X1==0,"No_Grievance","Grievance"))
dat_csv <- dat_csv %>% mutate(actual = ifelse(X1==0,"No_Grievance","Grievance"))
# makes publishable results from confusion matrices
library(plyr)
library(readr)
setwd("~/GitHub/ML-repression-study/Confusion_Matrices")
mydir = "Confusion_Martices"
myfiles = list.files(pattern="*.csv", full.names=TRUE)
myfiles
dat_csv = ldply(myfiles, read_csv, .id=labs)
labs <- c()
for (i in 1:length(myfiles)) {
labs[(2*i-1)] <- myfiles[i]
labs[(2*i)] <- myfiles[i]
}
dat_csv$cm <- labs
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
rename("0"="pred_no",
"1"="pred_yes")
dat_csv
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
rename("0"="pred_no") %>%
rename("1"="pred_yes")
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
rename(0=pred_no)# %>%
colnames(dat_csv)
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
#  rename(0=pred_no)# %>%
rename("pred_yes"="1")
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
#  rename(0=pred_no)# %>%
rename(pred_yes="1")
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
#  rename(0=pred_no)# %>%
rename(pred_yes=1)
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
#  rename(0=pred_no)# %>%
rename(pred_yes=1)
names(dat_csv)[1]
names(dat_csv)[2]
names(dat_csv)[2] <- "pred_yes"
# makes publishable results from confusion matrices
library(plyr)
library(readr)
setwd("~/GitHub/ML-repression-study/Confusion_Matrices")
mydir = "Confusion_Martices"
myfiles = list.files(pattern="*.csv", full.names=TRUE)
myfiles
dat_csv = ldply(myfiles, read_csv, .id=labs)
labs <- c()
for (i in 1:length(myfiles)) {
labs[(2*i-1)] <- myfiles[i]
labs[(2*i)] <- myfiles[i]
}
dat_csv$cm <- labs
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance")) %>%
#  rename(0=pred_no)# %>%
rename(pred_yes=1)
names(dat_csv)[2] <- "pred_no"
names(dat_csv)[3] <- "pred_yes"
dat_csv
# makes publishable results from confusion matrices
library(plyr)
library(readr)
setwd("~/GitHub/ML-repression-study/Confusion_Matrices")
mydir = "Confusion_Martices"
myfiles = list.files(pattern="*.csv", full.names=TRUE)
myfiles
dat_csv = ldply(myfiles, read_csv, .id=labs)
labs <- c()
for (i in 1:length(myfiles)) {
labs[(2*i-1)] <- myfiles[i]
labs[(2*i)] <- myfiles[i]
}
dat_csv$cm <- labs
dat_csv <- dat_csv %>%
mutate(actual = ifelse(X1==0,"no_grievance","grievance"))
names(dat_csv)[2] <- "pred_no"
names(dat_csv)[3] <- "pred_yes"
dat_csv
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm %>% spread(stock, price)
stocksm
stocksm %>% spread(time, price)
stocksm %>% spread(stock, price)
dat_csv
dat_csv %>% spread(pred_no,actual)
dat_csv
dat_csv %>% spread(cm,actual)
dat_csv
dat_csv %>% spread(actual,pred_no)
dat_csv %>% spread(actual)
dat_csv
dat_csv %>% spread(actual,pred_no)
dat_csv
dat_csv
df <- as.data.frame()
df <- as.data.frame(AFPF=numeric(),
AFPT=numeric(),
ATPF=numeric(),
ATPT=numeric(),
country=character())
df <- dat_csb[FALSE,]
df <- dat_csv[FALSE,]
df
dat_csv[,5]
dat_csv[5]
dat_csv[,5]
dat_csv[[5]]
dat_csv[5,2
dat_csv[5,2]
dat_csv[5,2]
dat_csv[2,5]
dat_csv
dat_csv[1,3]
dat_csv[1,2]
length(myfiles)
for (i in 1:length(myfiles) {
for (i in 1:length(myfiles) {
for (i in 1:length(myfiles)) {
df$AFPF <- dat_csv[i,2]
}
df <- as.data.frame(myfiles)
df
for (i in 1:length(myfiles)) {
df$AFPF <- dat_csv[i,2]
}
df
dat_csv[1,2]
df$myfiles[1]
df$myfiles[3]
df$myfiles[7]
df <- as.data.frame(myfiles)
for (i in 1:length(myfiles)) {
df$AFPF[i] <- dat_csv[i,2]
}
df
dat_csv
df
dat_csv
df <- as.data.frame(myfiles)
for (i in 1:length(myfiles)) {
df$AFPF[i] <- dat_csv[2*i-1,2]
}
df
dat_csv
df <- as.data.frame(myfiles)
for (i in 1:length(myfiles)) {
df$AFPF[i] <- dat_csv[2*i-1,2]
df$AFPT[i] <- dat_csv[2*i-1,3]
df$ATPF[i] <- dat_csv[2*i,2]
df$ATPT[i] <- dat_csv[2*i,3]
}
df
